/*
 * NOTE: Generated using OracleSDKGenerator, API Version: 20200630
 * DO NOT EDIT this file manually.
 *
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

using System;
using System.Management.Automation;
using Oci.OpsiService.Requests;
using Oci.OpsiService.Responses;
using Oci.OpsiService.Models;
using Oci.Common.Model;

namespace Oci.OpsiService.Cmdlets
{
    [Cmdlet("New", "OCIOpsiExadataInsight")]
    [OutputType(new System.Type[] { typeof(Oci.OpsiService.Models.ExadataInsight), typeof(Oci.OpsiService.Responses.CreateExadataInsightResponse) })]
    public class NewOCIOpsiExadataInsight : OCIOperationsInsightsCmdlet
    {
        [Parameter(Mandatory = true, ValueFromPipelineByPropertyName = true, HelpMessage = @"Details for the Exadata system for which an Exadata insight resource will be created in Operations Insights. This parameter also accepts subtypes <Oci.OpsiService.Models.CreateEmManagedExternalExadataInsightDetails>, <Oci.OpsiService.Models.CreateMacsManagedCloudExadataInsightDetails>, <Oci.OpsiService.Models.CreatePeComanagedExadataInsightDetails> of type <Oci.OpsiService.Models.CreateExadataInsightDetails>.")]
        public CreateExadataInsightDetails CreateExadataInsightDetails { get; set; }

        [Parameter(Mandatory = false, ValueFromPipelineByPropertyName = true, HelpMessage = @"A token that uniquely identifies a request that can be retried in case of a timeout or server error without risk of executing the same action again. Retry tokens expire after 24 hours.

*Note:* Retry tokens can be invalidated before the 24 hour time limit due to conflicting operations, such as a resource being deleted or purged from the system.")]
        public string OpcRetryToken { get; set; }

        [Parameter(Mandatory = false, ValueFromPipelineByPropertyName = true, HelpMessage = @"Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a particular request, please provide the request ID.")]
        public string OpcRequestId { get; set; }

        protected override void ProcessRecord()
        {
            base.ProcessRecord();
            CreateExadataInsightRequest request;

            try
            {
                request = new CreateExadataInsightRequest
                {
                    CreateExadataInsightDetails = CreateExadataInsightDetails,
                    OpcRetryToken = OpcRetryToken,
                    OpcRequestId = OpcRequestId
                };

                response = client.CreateExadataInsight(request).GetAwaiter().GetResult();
                WriteOutput(response, response.ExadataInsight);
                FinishProcessing(response);
            }
            catch (OciException ex)
            {
                TerminatingErrorDuringExecution(ex);
            }
            catch (Exception ex)
            {
                TerminatingErrorDuringExecution(ex);
            }
        }

        protected override void StopProcessing()
        {
            base.StopProcessing();
            TerminatingErrorDuringExecution(new OperationCanceledException("Cmdlet execution interrupted"));
        }

        private CreateExadataInsightResponse response;
    }
}
