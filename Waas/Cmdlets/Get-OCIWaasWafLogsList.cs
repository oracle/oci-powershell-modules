/*
 * NOTE: Generated using OracleSDKGenerator, API Version: 20181116
 * DO NOT EDIT this file manually.
 *
 * Copyright (c) 2020, Oracle and/or its affiliates.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

using System;
using System.Collections.Generic;
using System.Linq;
using System.Management.Automation;
using Oci.WaasService.Requests;
using Oci.WaasService.Responses;
using Oci.WaasService.Models;

namespace Oci.WaasService.Cmdlets
{
    [Cmdlet("Get", "OCIWaasWafLogsList")]
    [OutputType(new System.Type[] { typeof(Oci.WaasService.Models.WafLog), typeof(Oci.WaasService.Responses.ListWafLogsResponse) })]
    public class GetOCIWaasWafLogsList : OCIWaasCmdlet
    {
        [Parameter(Mandatory = true, ValueFromPipelineByPropertyName = true, HelpMessage = @"The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the WAAS policy.")]
        public string WaasPolicyId { get; set; }

        [Parameter(Mandatory = false, ValueFromPipelineByPropertyName = true, HelpMessage = @"The unique Oracle-assigned identifier for the request. If you need to contact Oracle about a particular request, please provide the request ID.")]
        public string OpcRequestId { get; set; }

        [Parameter(Mandatory = false, ValueFromPipelineByPropertyName = true, HelpMessage = @"The maximum number of items to return in a paginated call. If unspecified, defaults to `20`.", ParameterSetName = LimitSet)]
        public System.Nullable<int> Limit { get; set; }

        [Parameter(Mandatory = false, ValueFromPipelineByPropertyName = true, HelpMessage = @"The value of the `opc-next-page` response header from the previous paginated call.")]
        public string Page { get; set; }

        [Parameter(Mandatory = false, ValueFromPipelineByPropertyName = true, HelpMessage = @"A filter that matches log entries where the observed event occurred on or after a date and time specified in RFC 3339 format. If unspecified, defaults to two hours before receipt of the request.")]
        public System.Nullable<System.DateTime> TimeObservedGreaterThanOrEqualTo { get; set; }

        [Parameter(Mandatory = false, ValueFromPipelineByPropertyName = true, HelpMessage = @"A filter that matches log entries where the observed event occurred before a date and time, specified in RFC 3339 format.")]
        public System.Nullable<System.DateTime> TimeObservedLessThan { get; set; }

        [Parameter(Mandatory = false, ValueFromPipelineByPropertyName = true, HelpMessage = @"A full text search for logs.")]
        public string TextContains { get; set; }

        [Parameter(Mandatory = false, ValueFromPipelineByPropertyName = true, HelpMessage = @"Filters logs by access rule key.")]
        public System.Collections.Generic.List<string> AccessRuleKey { get; set; }

        [Parameter(Mandatory = false, ValueFromPipelineByPropertyName = true, HelpMessage = @"Filters logs by Web Application Firewall action.")]
        public System.Collections.Generic.List<Oci.WaasService.Requests.ListWafLogsRequest.ActionEnum> Action { get; set; }

        [Parameter(Mandatory = false, ValueFromPipelineByPropertyName = true, HelpMessage = @"Filters logs by client IP address.")]
        public System.Collections.Generic.List<string> ClientAddress { get; set; }

        [Parameter(Mandatory = false, ValueFromPipelineByPropertyName = true, HelpMessage = @"Filters logs by country code. Country codes are in ISO 3166-1 alpha-2 format. For a list of codes, see [ISO's website](https://www.iso.org/obp/ui/#search/code/).")]
        public System.Collections.Generic.List<string> CountryCode { get; set; }

        [Parameter(Mandatory = false, ValueFromPipelineByPropertyName = true, HelpMessage = @"Filter logs by country name.")]
        public System.Collections.Generic.List<string> CountryName { get; set; }

        [Parameter(Mandatory = false, ValueFromPipelineByPropertyName = true, HelpMessage = @"Filter logs by device fingerprint.")]
        public System.Collections.Generic.List<string> Fingerprint { get; set; }

        [Parameter(Mandatory = false, ValueFromPipelineByPropertyName = true, HelpMessage = @"Filter logs by HTTP method.")]
        public System.Collections.Generic.List<Oci.WaasService.Requests.ListWafLogsRequest.HttpMethodEnum> HttpMethod { get; set; }

        [Parameter(Mandatory = false, ValueFromPipelineByPropertyName = true, HelpMessage = @"Filter logs by incident key.")]
        public System.Collections.Generic.List<string> IncidentKey { get; set; }

        [Parameter(Mandatory = false, ValueFromPipelineByPropertyName = true, HelpMessage = @"Filter by log type. For more information about WAF logs, see [Logs](https://docs.cloud.oracle.com/iaas/Content/WAF/Tasks/logs.htm).")]
        public System.Collections.Generic.List<Oci.WaasService.Requests.ListWafLogsRequest.LogTypeEnum> LogType { get; set; }

        [Parameter(Mandatory = false, ValueFromPipelineByPropertyName = true, HelpMessage = @"Filter by origin IP address.")]
        public System.Collections.Generic.List<string> OriginAddress { get; set; }

        [Parameter(Mandatory = false, ValueFromPipelineByPropertyName = true, HelpMessage = @"Filter by referrer.")]
        public System.Collections.Generic.List<string> Referrer { get; set; }

        [Parameter(Mandatory = false, ValueFromPipelineByPropertyName = true, HelpMessage = @"Filter by request URL.")]
        public System.Collections.Generic.List<string> RequestUrl { get; set; }

        [Parameter(Mandatory = false, ValueFromPipelineByPropertyName = true, HelpMessage = @"Filter by response code.")]
        public System.Collections.Generic.List<int> ResponseCode { get; set; }

        [Parameter(Mandatory = false, ValueFromPipelineByPropertyName = true, HelpMessage = @"Filter by threat feed key.")]
        public System.Collections.Generic.List<string> ThreatFeedKey { get; set; }

        [Parameter(Mandatory = false, ValueFromPipelineByPropertyName = true, HelpMessage = @"Filter by user agent.")]
        public System.Collections.Generic.List<string> UserAgent { get; set; }

        [Parameter(Mandatory = false, ValueFromPipelineByPropertyName = true, HelpMessage = @"Filter by protection rule key.")]
        public System.Collections.Generic.List<string> ProtectionRuleKey { get; set; }

        [Parameter(Mandatory = true, ValueFromPipelineByPropertyName = true, HelpMessage = @"Fetches all pages of results.", ParameterSetName = AllPageSet)]
        public SwitchParameter All { get; set; }

        protected override void ProcessRecord()
        {
            base.ProcessRecord();
            ListWafLogsRequest request;

            try
            {
                request = new ListWafLogsRequest
                {
                    WaasPolicyId = WaasPolicyId,
                    OpcRequestId = OpcRequestId,
                    Limit = Limit,
                    Page = Page,
                    TimeObservedGreaterThanOrEqualTo = TimeObservedGreaterThanOrEqualTo,
                    TimeObservedLessThan = TimeObservedLessThan,
                    TextContains = TextContains,
                    AccessRuleKey = AccessRuleKey,
                    Action = Action,
                    ClientAddress = ClientAddress,
                    CountryCode = CountryCode,
                    CountryName = CountryName,
                    Fingerprint = Fingerprint,
                    HttpMethod = HttpMethod,
                    IncidentKey = IncidentKey,
                    LogType = LogType,
                    OriginAddress = OriginAddress,
                    Referrer = Referrer,
                    RequestUrl = RequestUrl,
                    ResponseCode = ResponseCode,
                    ThreatFeedKey = ThreatFeedKey,
                    UserAgent = UserAgent,
                    ProtectionRuleKey = ProtectionRuleKey
                };
                IEnumerable<ListWafLogsResponse> responses = GetRequestDelegate().Invoke(request);
                foreach (var item in responses)
                {
                    response = item;
                    WriteOutput(response, response.Items, true);
                }
                FinishProcessing(response);
            }
            catch (Exception ex)
            {
                TerminatingErrorDuringExecution(ex);
            }
        }

        protected override void StopProcessing()
        {
            base.StopProcessing();
            TerminatingErrorDuringExecution(new OperationCanceledException("Cmdlet execution interrupted"));
        }

        private RequestDelegate GetRequestDelegate()
        {
            IEnumerable<ListWafLogsResponse> DefaultRequest(ListWafLogsRequest request) => Enumerable.Repeat(client.ListWafLogs(request).GetAwaiter().GetResult(), 1);
            if (ParameterSetName.Equals(AllPageSet))
            {
                return req => client.Paginators.ListWafLogsResponseEnumerator(req);
            }
            return DefaultRequest;
        }

        private ListWafLogsResponse response;
        private delegate IEnumerable<ListWafLogsResponse> RequestDelegate(ListWafLogsRequest request);
        private const string AllPageSet = "AllPages";
        private const string LimitSet = "Limit";
    }
}
